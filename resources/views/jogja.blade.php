@section('title', 'Event Mapper')
@extends('layouts.master')


@section('head')

    {{-- leaflet css --}}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
        integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
        crossorigin="" />
    <link rel="stylesheet" href="https://labs.easyblog.it/maps/leaflet-search/src/leaflet-search.css">
    <script src="https://unpkg.com/vue@2"></script>

    {{-- load vue components --}}
    {{-- load shimmer --}}
    <script src="/assets/js/components/shimmer-card/index.js"></script>
    <link rel="stylesheet" href="/assets/js/components/shimmer-card/shimmer.css">
    {{-- load event card --}}
    <script src="/assets/js/components/event-card/index.js"></script>

    {{-- load event detail --}}
    <script src="/assets/js/components/event-detail/index.js"></script>

    <style>
        #mapid {
            min-height: 100vh;
        }

        .close-btn {
            cursor: pointer;
            background-color: #f0f0f1;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            width: 38px;
            height: 38px;
            border-radius: 50%;
            color: #25396f;
            margin-top: 10px;
            margin-right: 10px;
            border: none;
        }

        body {
            overflow-x: hidden;
        }

        #event-list {
            height: 100vh;
            overflow-y: scroll;
        }

        .slide-top {
            -webkit-animation: slide-top 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
            animation: slide-top 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
        }

        /* ----------------------------------------------
                                                                                                                                                                                                                             * Generated by Animista on 2022-5-20 19:36:31
                                                                                                                                                                                                                             * Licensed under FreeBSD License.
                                                                                                                                                                                                                             * See http://animista.net/license for more info.
                                                                                                                                                                                                                             * w: http://animista.net, t: @cssanimista
                                                                                                                                                                                                                             * ---------------------------------------------- */

        /**
                                                                                                                                                                                                                             * ----------------------------------------
                                                                                                                                                                                                                             * animation slide-top
                                                                                                                                                                                                                             * ----------------------------------------
                                                                                                                                                                                                                             */
        @-webkit-keyframes slide-top {
            0% {
                -webkit-transform: translateY(0);
                transform: translateY(0);
            }

            100% {
                -webkit-transform: translateY(-15px);
                transform: translateY(-15px);
            }
        }

        @keyframes slide-top {
            0% {
                -webkit-transform: translateY(0);
                transform: translateY(0);
            }

            100% {
                -webkit-transform: translateY(-15px);
                transform: translateY(-15px);
            }
        }

        .btn:focus,
        .btn:active {
            outline: none !important;
            box-shadow: none;
        }
    </style>

@endsection





@section('content')


    <div class="row no-gutter bg-white" id="app">
        <div id="mapid"></div>
    </div>



    <!-- Leaflet JavaScript -->
    <!-- Make sure you put this AFTER Leaflet's CSS -->
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
        integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
        crossorigin=""></script>
    <!-- marker groups ext -->
    <script src="https://unpkg.com/leaflet.markercluster@1.3.0/dist/leaflet.markercluster.js"></script>
    <script>
        new Vue({
            el: '#app',
            data: () => ({
                categories: [],
                filter: {
                    cat: 0,
                    date: 1,
                },

                message: 'Hello Vue!',
                centerPos: {
                    lat: -7.797068,
                    lng: 110.370529
                },
                zoom: 20,
                map: null,
                events: [],
                isLoading: false,
                layer: null,
                showDetail: false,
                detail: {}
            }),

            mounted() {
                this.initMap()
                this.getEvents(this.centerPos.lat, this.centerPos.lng);
            },

            methods: {
                initMap() {
                    this.map = L
                        .map('mapid')
                        .setView([this.centerPos.lat, this.centerPos.lng], this.zoom);

                    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
                        // maxNativeZoom: 19,
                        maxZoom: 19
                    }).addTo(this.map);
                },

                getEvents(lat, lng) {
                    this.isLoading = true;
                    const urlGeoInvestasi = `https://peta.jogjakota.go.id/apis/geojson/geoinvestasi/investasi`
                    const urlJogja = '/api/geojson/yogyakarta-province'
                    fetch(urlJogja)
                        .then(r => r.json())
                        .then(d => {
                            // set loading to false 
                            this.isLoading = false;
                            // bind to data
                            this.events = d.features;


                            var map = this.map
                            this.layer = L.geoJSON(d, {
                                    pointToLayer: (geoJsonPoint, latlng) => L.marker(latlng),
                                    onEachFeature: function onEachFeature(feature, layer) {
                                        layer.on({
                                            // mouseover: function(e) {
                                            //     var layer = e.target;

                                            //     layer.setStyle({
                                            //         fillColor: 'grey',
                                            //         weight: 4,
                                            //         opacity: 1,
                                            //         color: 'grey',
                                            //         dashArray: '',
                                            //         fillOpacity: 0.3
                                            //     });

                                            //     if (!L.Browser.ie && !L.Browser.opera && !L
                                            //         .Browser.edge) {
                                            //         layer.bringToFront();
                                            //     }
                                            // },
                                            // mouseout: (e) => {
                                            //     L.geoJSON().resetStyle(e.target);
                                            // },
                                            click: (e) => {
                                                map.fitBounds(e.target.getBounds())
                                            }
                                        });
                                    },
                                    style: function polystyle(feature) {
                                        return {
                                            fillColor: 'grey',
                                            weight: 2,
                                            opacity: 1,
                                            color: 'grey',
                                            dashArray: '3',
                                            fillOpacity: 0.1
                                        };
                                    }

                                })
                                .addTo(this.map);
                        })
                }
            }
        })
    </script>
@endsection
